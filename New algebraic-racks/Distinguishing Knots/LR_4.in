% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_weight, 25).
  set(restrict_denials).
  assign(new_constants, 1).
  assign(max_seconds, 60).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

% Distributivity from a nonstandard Boolean algebra (BA) basis.

% Prover9 should produce a proof in a few seconds.

% Nonstandard Boolean algebra basis.
% Rack Axioms

all x (pow10 (x) = (((((((((x * x) * x) * x) * x) * x) * x) * x)* x) *x)).

all x all y all z ((x*y)*z = (x*z)*(y*z)).
all x all y ((x@y) * y = x).
all x all y ((x*y)@y = x).

all x (x = pow10 (x)).

all x all y (U(x, y) -> (y = (((x*x)*x)*x)*x)).
%all x all y (D(x, y)<-> (y = (((x*x)*x)*x))).

%all x (pow (x) = (((x*x)*x)*x)*x).
%all x (negpow (x) = (((x@x)@x)@x)@x).

%Knot Axioms.

%One cross unknot.
%U(a_1, a_2).
%a_2 * a_1 = a_3.
%U(a_3, a_1).

U(a_1, a_2).
U(a_2, a_3).
U(a_3, a_4).
U(a_4, a_5).
U(a_5, a_6).
U(a_6, a_7).
U(a_7, a_8).
U(a_8, a_9).
U(a_9, a_10).
U(a_10, a_11).
U(a_11, a_12).
U(a_12, a_13).
U(a_13, a_14).
U(a_14, a_15).
U(a_15, a_16).
U(a_16, a_17).
U(a_17, a_18).
U(a_18, a_1).

%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).
%U(a_1, a_2).
%U(a_2, a_3).

end_of_list.

formulas(goals).

%a_1 = a_2.
a_1 = a_2.

end_of_list.

